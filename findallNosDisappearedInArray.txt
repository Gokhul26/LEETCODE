//https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/
//cyclic sort

class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        int i = 0;
        while (i<nums.length){
            int correctIndex = nums[i] - 1;
            if(nums[i] != nums[correctIndex]){
                swap(nums, i, correctIndex);
            }else{
                i ++;
            }
        }
        List<Integer> ans = new ArrayList<>();
        for (int index = 0;index < nums.length; index ++){
            if(nums[index] != index+1){
                ans.add(index+1);
            }
        }
        return ans;
    }
       
    static void swap(int[] arr,int start, int second){
            int temp = arr[start];
            arr[start] = arr[second];
            arr[second] = temp;
        }
    
}